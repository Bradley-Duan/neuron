trigger:
  batch: true
  branches:
    include:
      - master
      - develop
      - e2e-tests
      - rc/*
  tags:
    include:
      - '*'

pr:
  autoCancel: true
  branches:
    include:
      - '*'

jobs:
  - job: macOS
    pool:
      vmImage: 'macos-10.14'
    strategy:
      matrix:
        node_11_x:
          node_version: 11.x
        node_12_x:
          node_version: 12.x
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(node_version)
      displayName: 'Install Node.js'
    - script: |
        yarn global add lerna
        yarn bootstrap
        CI=false yarn build
      name: Bootstrap
    - script: CI=true yarn test
      name: Test

  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      matrix:
        node_11_x:
          node_version: 11.x
        node_12_x:
          node_version: 12.x
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(node_version)
      displayName: 'Install Node.js'
    - script: |
        yarn global add lerna
        yarn bootstrap
        CI=false yarn build
      name: Bootstrap
    - script: |
        export DISPLAY=':99.0'
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        CI=true yarn test
      name: Test

  - job: Windows
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        node_11_x:
          node_version: 11.x
        node_12_x:
          node_version: 12.x
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(node_version)
      displayName: 'Install Node.js'
    - script: yarn global add lerna
      displayName: 'Install lerna'
    - script: |
        yarn bootstrap
        set CI=false
        yarn build
      name: Build
    - script: |
        set CI=true
        yarn test
      name: Test

  - job: Integration
    condition: |
      or(
        eq(variables['build.sourceBranch'], 'refs/heads/e2e-tests'),
        startsWith(variables['Build.SourceBranch'], 'refs/heads/rc/')
      )
    pool:
      vmImage: 'macos-10.14'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: 12.x
      displayName: 'Install Node.js'
    - script: |
        yarn global add lerna
        yarn bootstrap
      name: Bootstrap
    - script: yarn test:e2e
      name: Test

  - job: Package
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    pool:
      vmImage: 'macos-10.14'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: 12.x
      displayName: 'Install Node.js'
    - script: |
        yarn global add lerna
        yarn bootstrap
      name: Bootstrap
    - task: DownloadSecureFile@1
      name: macSiginingCertificate
      displayName: 'Download macOS Signing Certificate'
      inputs:
        secureFile: Neuron_mac.p12
    - task: DownloadSecureFile@1
      name: winSiginingCertificate
      displayName: 'Download Windows Signing Certificate'
      inputs:
        secureFile: Neuron_win.p12
    - script: yarn package
      name: Build
      env:
        CSC_LINK: $(macSiginingCertificate.secureFilePath)
        CSC_KEY_PASSWORD: $(macSiginingCertificatePassword)
        WIN_CSC_LINK: $(winSiginingCertificate.secureFilePath)
        WIN_CSC_KEY_PASSWORD: $(winSiginingCertificatePassword)
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: nervos-bot
        repositoryName: nervosnetwork/neuron
        action: edit
        tag: $(Build.SourceBranchName)
        assets: |
          $(Build.SourcesDirectory)/release/*.zip
          $(Build.SourcesDirectory)/release/*.dmg
          $(Build.SourcesDirectory)/release/*.exe
          $(Build.SourcesDirectory)/release/*.deb
          $(Build.SourcesDirectory)/release/*.AppImage
        assetUploadMode: replace
        isPreRelease: true
        addChangeLog: false
